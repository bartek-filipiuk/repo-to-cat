---
/**
 * Login Page
 *
 * Public page for username/password authentication.
 */

import { getSession, setSessionCookie } from '../lib/auth';

// Check if already logged in
const user = await getSession(Astro);
if (user) {
  return Astro.redirect('/');
}

let error: string | null = null;

// Handle form submission
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const usernameValue = formData.get('username');
    const passwordValue = formData.get('password');

    if (!usernameValue || !passwordValue) {
      error = 'Username and password are required';
    } else {
      // Call backend login API directly (not using api client for SSR)
      const apiUrl = import.meta.env.API_URL || 'http://localhost:8000';
      const loginResponse = await fetch(`${apiUrl}/auth/login`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          username: usernameValue,
          password: passwordValue
        }),
      });

      if (!loginResponse.ok) {
        try {
          const errorData = await loginResponse.json();
          error = (errorData && errorData.detail) ? String(errorData.detail) : 'Invalid username or password';
        } catch {
          error = 'Invalid username or password';
        }
      } else {
        // Extract session cookie from backend response and forward to client
        const setCookieHeader = loginResponse.headers.get('set-cookie');
        if (setCookieHeader) {
          // Parse the cookie and set it in Astro response
          const cookieParts = setCookieHeader.split(';')[0]; // Get "session_token=value"
          const [name, value] = cookieParts.split('=');

          if (name && value) {
            setSessionCookie(Astro, value);
          }
        }

        // Redirect to dashboard
        return Astro.redirect('/');
      }
    }
  } catch (err: any) {
    console.error('Login error:', err);
    error = (err && err.message) ? String(err.message) : 'An error occurred during login';
  }
}
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login - Repo-to-Cat</title>
</head>
<body class="bg-oxide-dark min-h-screen flex items-center justify-center p-4">
  <div class="w-full max-w-md">
    <!-- Logo/Title -->
    <div class="text-center mb-8">
      <h1 class="text-4xl font-bold text-oxide-green mb-2">Repo-to-Cat</h1>
      <p class="text-oxide-text-dim">Visualize code quality as cats</p>
    </div>

    <!-- Login Form -->
    <div class="card">
      <h2 class="text-2xl font-semibold text-oxide-text mb-6">Login</h2>

      {error && (
        <div class="bg-red-900/20 border border-red-500/50 text-red-400 px-4 py-3 rounded mb-4">
          {error}
        </div>
      )}

      <form method="POST">
        <div class="mb-4">
          <label for="username" class="block text-oxide-text-dim text-sm font-medium mb-2">
            Username
          </label>
          <input
            type="text"
            id="username"
            name="username"
            class="input w-full"
            required
            autofocus
          />
        </div>

        <div class="mb-6">
          <label for="password" class="block text-oxide-text-dim text-sm font-medium mb-2">
            Password
          </label>
          <input
            type="password"
            id="password"
            name="password"
            class="input w-full"
            required
          />
        </div>

        <button type="submit" class="btn-primary w-full">
          Login
        </button>
      </form>

      <p class="text-oxide-text-dim text-sm text-center mt-6">
        No registration - accounts are manually created
      </p>
    </div>
  </div>
</body>
</html>

<style>
  @import '../styles/global.css';
</style>
